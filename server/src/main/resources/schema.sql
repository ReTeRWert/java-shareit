DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name            VARCHAR(255) NOT NULL,
    email           VARCHAR(255) NOT NULL,

    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description     VARCHAR(512) NOT NULL,
    requestor_id    BIGINT  NOT NULL,
    created         TIMESTAMP NOT NULL,

    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests FOREIGN KEY (requestor_id) REFERENCES users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name            VARCHAR(255) NOT NULL,
    description     VARCHAR(1000) NOT NULL,
    available       BOOLEAN NOT NULL,
    owner_id        BIGINT NOT NULL,
    request_id      BIGINT DEFAULT NULL,

    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users (id),
    CONSTRAINT fk_items_requests FOREIGN KEY (request_id) REFERENCES requests ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS bookings (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date      TIMESTAMP,
    end_date        TIMESTAMP,
    item_id         BIGINT NOT NULL,
    booker_id       BIGINT NOT NULL,
    status          VARCHAR(25) NOT NULL,

    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items(id),
    CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text            VARCHAR(1500),
    item_id         BIGINT,
    author_id       BIGINT,
    creation_date   TIMESTAMP,

    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items(id),
    CONSTRAINT fk_comment_user FOREIGN KEY (author_id) REFERENCES users(id)
);